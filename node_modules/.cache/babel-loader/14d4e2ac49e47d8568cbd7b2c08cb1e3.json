{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport { createBrowserHistory } from 'history';\nimport { routerMiddleware } from 'connected-react-router';\nimport createSagaMiddleware from 'redux-saga';\nimport { composeEnhancers } from './utils';\nimport rootReducer from './root-reducer';\nimport rootSaga from './root-saga'; // configure middlewares\n\nexport const history = createBrowserHistory();\nconst sagaMiddleWare = createSagaMiddleware();\nconst middlewares = [routerMiddleware(history), sagaMiddleWare]; // compose enhancers\n\nconst enhancer = composeEnhancers(applyMiddleware(...middlewares)); // rehydrate state on app start\n\nconst initialState = {}; // create store\n\nconst store = createStore(rootReducer(history), initialState, enhancer); // run middlewares\n\nsagaMiddleWare.run(rootSaga); // export store singleton instance\n\nexport default store;","map":{"version":3,"sources":["/Users/alexlauks/Documents/REPOS/cards-against-flora-tst/src/store/index.ts"],"names":["createStore","applyMiddleware","createBrowserHistory","routerMiddleware","createSagaMiddleware","composeEnhancers","rootReducer","rootSaga","history","sagaMiddleWare","middlewares","enhancer","initialState","store","run"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,oBAAT,QAAqC,SAArC;AACA,SAASC,gBAAT,QAAiC,wBAAjC;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,SAASC,gBAAT,QAAiC,SAAjC;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,QAAP,MAAqB,aAArB,C,CAGA;;AACA,OAAO,MAAMC,OAAO,GAAGN,oBAAoB,EAApC;AACP,MAAMO,cAAc,GAAGL,oBAAoB,EAA3C;AACA,MAAMM,WAAW,GAAG,CAACP,gBAAgB,CAACK,OAAD,CAAjB,EAA4BC,cAA5B,CAApB,C,CACA;;AACA,MAAME,QAAQ,GAAGN,gBAAgB,CAACJ,eAAe,CAAC,GAAGS,WAAJ,CAAhB,CAAjC,C,CAEA;;AACA,MAAME,YAAY,GAAG,EAArB,C,CAEA;;AACA,MAAMC,KAAK,GAAGb,WAAW,CAACM,WAAW,CAACE,OAAD,CAAZ,EAAuBI,YAAvB,EAAqCD,QAArC,CAAzB,C,CAEA;;AACAF,cAAc,CAACK,GAAf,CAAmBP,QAAnB,E,CAEA;;AACA,eAAeM,KAAf","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport { createBrowserHistory } from 'history';\nimport { routerMiddleware } from 'connected-react-router';\nimport createSagaMiddleware from 'redux-saga';\n\nimport { composeEnhancers } from './utils';\nimport rootReducer from './root-reducer';\nimport rootSaga from './root-saga';\n\n\n// configure middlewares\nexport const history = createBrowserHistory();\nconst sagaMiddleWare = createSagaMiddleware();\nconst middlewares = [routerMiddleware(history), sagaMiddleWare];\n// compose enhancers\nconst enhancer = composeEnhancers(applyMiddleware(...middlewares));\n\n// rehydrate state on app start\nconst initialState = {};\n\n// create store\nconst store = createStore(rootReducer(history), initialState, enhancer);\n\n// run middlewares\nsagaMiddleWare.run(rootSaga);\n\n// export store singleton instance\nexport default store;"]},"metadata":{},"sourceType":"module"}