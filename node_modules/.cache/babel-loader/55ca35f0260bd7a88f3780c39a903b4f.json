{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport { createBrowserHistory } from 'history';\nimport { routerMiddleware } from 'connected-react-router';\nimport createSagaMiddleware from 'redux-saga';\nimport { composeEnhancers } from './utils';\nimport rootReducer from './root-reducer';\nimport rootSaga from './root-saga';\nimport { createLogger } from 'redux-logger'; // configure middlewares\n\nexport const history = createBrowserHistory();\nconst sagaMiddleWare = createSagaMiddleware();\nconst loggerMiddleWare = createLogger();\nconst middlewares = [routerMiddleware(history), sagaMiddleWare, loggerMiddleWare]; // compose enhancers\n\nconst enhancer = composeEnhancers(applyMiddleware(...middlewares)); // rehydrate state on app start\n\nconst initialState = {}; // create store\n\nconst store = createStore(rootReducer(history), initialState, enhancer); // run middlewares\n\nsagaMiddleWare.run(rootSaga); // export store singleton instance\n\nexport default store;","map":{"version":3,"sources":["/Users/alexlauks/Documents/REPOS/cards-against-flora-tst/src/store/index.ts"],"names":["createStore","applyMiddleware","createBrowserHistory","routerMiddleware","createSagaMiddleware","composeEnhancers","rootReducer","rootSaga","createLogger","history","sagaMiddleWare","loggerMiddleWare","middlewares","enhancer","initialState","store","run"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,oBAAT,QAAqC,SAArC;AACA,SAASC,gBAAT,QAAiC,wBAAjC;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,SAASC,gBAAT,QAAiC,SAAjC;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,SAASC,YAAT,QAA6B,cAA7B,C,CAGA;;AACA,OAAO,MAAMC,OAAO,GAAGP,oBAAoB,EAApC;AACP,MAAMQ,cAAc,GAAGN,oBAAoB,EAA3C;AACA,MAAMO,gBAAgB,GAAGH,YAAY,EAArC;AACA,MAAMI,WAAW,GAAG,CAACT,gBAAgB,CAACM,OAAD,CAAjB,EAA4BC,cAA5B,EAA4CC,gBAA5C,CAApB,C,CACA;;AACA,MAAME,QAAQ,GAAGR,gBAAgB,CAACJ,eAAe,CAAC,GAAGW,WAAJ,CAAhB,CAAjC,C,CAEA;;AACA,MAAME,YAAY,GAAG,EAArB,C,CAEA;;AACA,MAAMC,KAAK,GAAGf,WAAW,CAACM,WAAW,CAACG,OAAD,CAAZ,EAAuBK,YAAvB,EAAqCD,QAArC,CAAzB,C,CAEA;;AACAH,cAAc,CAACM,GAAf,CAAmBT,QAAnB,E,CAEA;;AACA,eAAeQ,KAAf","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport { createBrowserHistory } from 'history';\nimport { routerMiddleware } from 'connected-react-router';\nimport createSagaMiddleware from 'redux-saga';\n\nimport { composeEnhancers } from './utils';\nimport rootReducer from './root-reducer';\nimport rootSaga from './root-saga';\nimport { createLogger } from 'redux-logger';\n\n\n// configure middlewares\nexport const history = createBrowserHistory();\nconst sagaMiddleWare = createSagaMiddleware();\nconst loggerMiddleWare = createLogger();\nconst middlewares = [routerMiddleware(history), sagaMiddleWare, loggerMiddleWare];\n// compose enhancers\nconst enhancer = composeEnhancers(applyMiddleware(...middlewares));\n\n// rehydrate state on app start\nconst initialState = {};\n\n// create store\nconst store = createStore(rootReducer(history), initialState, enhancer);\n\n// run middlewares\nsagaMiddleWare.run(rootSaga);\n\n// export store singleton instance\nexport default store;"]},"metadata":{},"sourceType":"module"}