{"ast":null,"code":"import { call, put, all, take } from 'redux-saga/effects';\nimport * as appActions from '../app/app-actions';\nimport * as decksActions from '../decks/decks-actions';\nimport * as cardsActions from '../cards/cards-actions';\nimport { Actions as DeckActions } from '../decks/decks-types';\nimport { Actions as CardActions } from '../cards/cards-types';\n\nfunction* fetchInitialData() {\n  yield all([// throws fetching functions\n  put(decksActions.fetchDecksRequest()), put(cardsActions.fetchCardsRequest())]);\n}\n\nexport function* watchInitialData() {\n  yield all([take([DeckActions.FETCH_DECKS_SUCCESS, DeckActions.FETCH_DECKS_ERROR]), take([CardActions.FETCH_CARDS_SUCCESS, CardActions.FETCH_CARDS_ERROR])]);\n  console.log('HOLAA');\n} // Call init app on saga load\n\nexport function* AppSaga() {\n  yield call(fetchInitialData);\n  yield call(watchInitialData);\n  yield put(appActions.startInitApp());\n}","map":{"version":3,"sources":["/Users/alexlauks/Documents/REPOS/cards-against-flora-tst/src/features/app/app-sagas.ts"],"names":["call","put","all","take","appActions","decksActions","cardsActions","Actions","DeckActions","CardActions","fetchInitialData","fetchDecksRequest","fetchCardsRequest","watchInitialData","FETCH_DECKS_SUCCESS","FETCH_DECKS_ERROR","FETCH_CARDS_SUCCESS","FETCH_CARDS_ERROR","console","log","AppSaga","startInitApp"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,GAApB,EAAyBC,IAAzB,QAAqC,oBAArC;AAEA,OAAO,KAAKC,UAAZ,MAA4B,oBAA5B;AACA,OAAO,KAAKC,YAAZ,MAA8B,wBAA9B;AACA,OAAO,KAAKC,YAAZ,MAA8B,wBAA9B;AAEA,SAASC,OAAO,IAAIC,WAApB,QAAuC,sBAAvC;AACA,SAASD,OAAO,IAAIE,WAApB,QAAuC,sBAAvC;;AAEA,UAAUC,gBAAV,GAA6B;AAC3B,QAAMR,GAAG,CAAC,CACR;AACAD,EAAAA,GAAG,CAACI,YAAY,CAACM,iBAAb,EAAD,CAFK,EAGRV,GAAG,CAACK,YAAY,CAACM,iBAAb,EAAD,CAHK,CAAD,CAAT;AAKD;;AAED,OAAO,UAAUC,gBAAV,GAA6B;AAClC,QAAMX,GAAG,CAAC,CACRC,IAAI,CAAC,CAACK,WAAW,CAACM,mBAAb,EAAkCN,WAAW,CAACO,iBAA9C,CAAD,CADI,EAERZ,IAAI,CAAC,CAACM,WAAW,CAACO,mBAAb,EAAkCP,WAAW,CAACQ,iBAA9C,CAAD,CAFI,CAAD,CAAT;AAIAC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD,C,CAED;;AACA,OAAO,UAAUC,OAAV,GAAoB;AACzB,QAAMpB,IAAI,CAACU,gBAAD,CAAV;AACA,QAAMV,IAAI,CAACa,gBAAD,CAAV;AACA,QAAMZ,GAAG,CAACG,UAAU,CAACiB,YAAX,EAAD,CAAT;AACD","sourcesContent":["import { call, put, all, take } from 'redux-saga/effects';\n\nimport * as appActions from '../app/app-actions';\nimport * as decksActions from '../decks/decks-actions';\nimport * as cardsActions from '../cards/cards-actions';\n\nimport { Actions as DeckActions } from '../decks/decks-types';\nimport { Actions as CardActions } from '../cards/cards-types';\n\nfunction* fetchInitialData() {\n  yield all([\n    // throws fetching functions\n    put(decksActions.fetchDecksRequest()),\n    put(cardsActions.fetchCardsRequest()),\n  ]);\n}\n\nexport function* watchInitialData() {\n  yield all([\n    take([DeckActions.FETCH_DECKS_SUCCESS, DeckActions.FETCH_DECKS_ERROR]),\n    take([CardActions.FETCH_CARDS_SUCCESS, CardActions.FETCH_CARDS_ERROR])\n  ]);\n  console.log('HOLAA');\n}\n\n// Call init app on saga load\nexport function* AppSaga() {\n  yield call(fetchInitialData);\n  yield call(watchInitialData);\n  yield put(appActions.startInitApp());\n}"]},"metadata":{},"sourceType":"module"}