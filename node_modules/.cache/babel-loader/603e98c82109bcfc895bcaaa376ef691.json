{"ast":null,"code":"export let Actions;\n\n(function (Actions) {\n  Actions[\"FETCH_DECKS_REQUEST\"] = \"@@decks/FETCH_DECKS_REQUEST\";\n  Actions[\"FETCH_DECKS_SUCCESS\"] = \"@@decks/FETCH_DECKS_SUCCESS\";\n  Actions[\"FETCH_DECKS_ERROR\"] = \"@@decks/FETCH_DECKS_ERROR\";\n})(Actions || (Actions = {}));","map":{"version":3,"sources":["/Users/alexlauks/Documents/REPOS/cards-against-flora-tst/src/features/decks/decks-types.ts"],"names":["Actions"],"mappings":"AASA,WAAYA,OAAZ;;WAAYA,O;AAAAA,EAAAA,O;AAAAA,EAAAA,O;AAAAA,EAAAA,O;GAAAA,O,KAAAA,O","sourcesContent":["import { Action } from \"typesafe-actions\";\n\nexport type Deck = {\n  uid: string;\n  displayName: string;\n  rottenCards: string[];\n  freshCards: string[];\n}\n\nexport enum Actions {\n  FETCH_DECKS_REQUEST = '@@decks/FETCH_DECKS_REQUEST',\n  FETCH_DECKS_SUCCESS = '@@decks/FETCH_DECKS_SUCCESS',\n  FETCH_DECKS_ERROR = '@@decks/FETCH_DECKS_ERROR',\n}\n\nexport interface IActionFetchDecksRequest extends Action {\n  type: Actions.FETCH_DECKS_REQUEST;\n}\n\nexport interface IActionFetchDecksSuccess extends Action {\n  type: typeof Actions.FETCH_DECKS_SUCCESS;\n  payload: {\n    decks: Deck[];\n  }\n}\n\nexport interface IActionFetchDecksError extends Action {\n  type: typeof Actions.FETCH_DECKS_ERROR;\n  payload: {\n    msg: string;\n  }\n}\n\nexport type ActionTypes =\n  IActionFetchDecksRequest |\n  IActionFetchDecksSuccess |\n  IActionFetchDecksError;\n\nexport type State = {\n  isFetching: boolean,\n  decks: Deck[],\n}"]},"metadata":{},"sourceType":"module"}